services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: db_pipeline_btc
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
      start_period: 5s
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database:/docker-entrypoint-initdb.d
    networks:
      - my_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: ["CMD", "sh", "-c", "echo mntr | nc localhost 2181 || exit 1"]
      interval: 10s
      retries: 5
      start_period: 30s
    networks:
      - my_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server kafka:9092 --list || exit 1"]
      interval: 10s
      retries: 5
      start_period: 45s
    networks:
      - my_network

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    environment:
      KAFKA_BROKERCONNECT: kafka:9092  # Conecta ao Kafka
      ZOOKEEPER_CONNECT: zookeeper:2181  # Conecta ao Zookeeper
    ports:
      - "9000:9000"  # Porta para acessar a interface web do Kafdrop
    depends_on:
      - kafka  # Kafdrop precisa que o Kafka esteja rodando
    networks:
      - my_network

  airflow:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow
    environment:
      - AIRFLOW_HOME=/opt/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:1234@postgres/db_pipeline_btc
      - AIRFLOW__WEBSERVER__EXPOSE_UI_API=True
    volumes:
      - ./dags:/opt/airflow/dags 
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - my_network

  spark-master:
    image: bitnami/spark:3.1.1
    container_name: spark-master
    environment:
      - SPARK_MODE=master
    ports:
      - "8081:8081"
    depends_on:
      - kafka
    volumes:
      - spark_data:/opt/spark/data
    networks:
      - my_network

  spark-worker:
    image: bitnami/spark:3.1.1
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    volumes:
      - spark_data:/opt/spark/data
    networks:
      - my_network

volumes:
  postgres_data:
  spark_data:

networks:
  my_network:
    driver: bridge
